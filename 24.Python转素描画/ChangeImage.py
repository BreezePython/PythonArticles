# -*- coding: utf-8 -*-
# @Author   : 王翔
# @JianShu  : 清风Python
# @Date     : 2019/11/13 01:18
# @Software : PyCharm
# @version  ：Python 3.7.3
# @File     : ChangeImage.py


from tkinter.messagebox import *
from tkinter.filedialog import *
from tkinter import *
import base64
from PIL import Image, ImageFilter, ImageOps
import os

img_bs64 = b'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'


def dodge(a, b, alpha):
    return min(int(a * 255 / (256 - b * alpha)), 255)


def draw(dir_info, blur=25, alpha=1.0):
    base_dir = os.path.dirname(os.path.abspath(__file__))
    save_file_name = os.path.join(base_dir, 'final.png')
    img = Image.open(dir_info)
    img1 = img.convert('L')  # 图片转换灰色
    img2 = img1.copy()
    img2 = ImageOps.invert(img2)
    for i in range(blur):
        img2 = img2.filter(ImageFilter.BLUR)
    width, height = img1.size
    for x in range(width):
        for y in range(height):
            a = img1.getpixel((x, y))
            b = img2.getpixel((x, y))
        img1.putpixel((x, y), dodge(a, b, alpha))
    img1.save(save_file_name)
    img1.show()


class LoginPage(object):
    def __init__(self, master=None):
        self.root = master
        self.root.geometry('%dx%d' % (450, 250))
        self.page = Frame(self.root)
        self.Dir = StringVar()
        self.Port = StringVar()
        self.path = StringVar()
        self.dir_info = StringVar()
        self.create_page()

    def create_page(self):
        self.page.grid()
        with open('tmp.gif', 'wb+') as f:
            f.write(base64.b64decode(img_bs64))
        self.photo = PhotoImage(file='tmp.gif')
        os.remove('tmp.gif')
        Label(self.page, text='''
        
        公众号: 清风Python
        作者  : 王翔 
        时间  ：2019-11-14
        工具  ：Python 3. 7. 3 Tkinter        
        详情  : 图片转素描画工具''', justify=LEFT).grid(row=0, column=0, columnspan=2, rowspan=1, stick=NW)
        Label(self.page, text="图片路径").grid(row=3, column=0, sticky=W, pady=5)
        self.dir_info = Entry(self.page, textvariable=self.path)
        self.dir_info.grid(row=3, column=1, columnspan=1, padx=20)
        Button(self.root, text="选择路径", command=lambda: self.select_path()).grid(row=0, column=0, sticky=S, padx=20,
                                                                                pady=5)
        Label(self.page, image=self.photo).grid(row=0, column=2)
        Button(self.page, text='转换', command=self.login_check, width=10).grid(row=3, column=2, padx=10, pady=5)

    def select_path(self):
        path_ = askopenfilename(filetypes=[("file", "*.*")])
        self.path.set(path_)

    def login_check(self):
        img_dir = self.dir_info.get()
        if img_dir == "":
            showinfo(title='错误', massage='路径错误')
        else:
            draw(img_dir)


root = Tk()
root.title('素描画转化工具')
LoginPage(root)
root.mainloop()
